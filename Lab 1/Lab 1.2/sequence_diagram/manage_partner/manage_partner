@startuml
actor User
participant "Client" as C
participant "Server" as S
database Database

activate User
User -> C: Requests to add a new partner
activate C
C --> User: Display form to create new partner
User -> C: Input partner infomation
C -> S: Sends request to add a new partner with details
activate S
S -> Database: Saves partner information
activate Database
Database --> S: Confirmation of new partner added
deactivate Database
S --> C: Sends success message for partner addition
deactivate S
deactivate C

User -> C: Requests to update partner information
activate C
C --> User: Display form to update infomation
User -> C: Input new infomation
C -> S: Sends update request with modified partner details
activate S
S -> Database: Updates partner information
activate Database
Database --> S: Confirmation of partner information updated
deactivate Database
S --> C: Sends success message for partner update
deactivate S
deactivate C

User -> C: Requests to view/add/remove partner's products
activate C
C -> S: Sends request to view partner's products
activate S
S -> Database: Retrieves partner's product details
activate Database
Database --> S: Partner's product information
deactivate Database
S --> C: Sends partner's product information to view
C --> User: Display partner's products
User -> C: Add/Remove products
C -> S: Sends request to add/remove products
S -> Database: Update partner's products
activate Database
Database --> S: Confirmation of successful action
deactivate Database
S --> C: Sends creation success message
deactivate S
deactivate C

User -> C: Requests history of stock in of partner
activate C
C -> S: Sends request for stock in history of partner
activate S
S -> Database: Retrieves stock in history of partner
activate Database
Database --> S: Stock in history of the partner
deactivate Database
S --> C: Sends stock in history of partner to view
deactivate S
deactivate C
@enduml
