@startuml
actor User
participant "Client" as C
participant "Server" as S
database Database

User -> C: Requests to create an employee
activate C
C --> User: Display form to create employee
User -> C: Input employee data
C -> S: Sends create request with employee information
activate S
S -> Database: Saves employee information
activate Database
Database --> S: Confirmation of successful creation
deactivate Database
S --> C: Sends creation success message
deactivate C
deactivate S

User -> C: Requests to read an employee
activate C 
C -> S: Sends read request for employee information
activate S
S -> Database: Retrieves employee information
activate Database
Database --> S: Sends employee details
deactivate Database
S --> C: Sends employee information
deactivate C
deactivate S

User -> C: Requests to update an employee
activate C 
C --> User: Display form to update employee infomation
User -> C: Input employee data
C -> S: Sends update request with modified employee details
activate S
S -> Database: Updates employee information
activate Database
Database --> S: Confirmation of successful update
deactivate Database
S --> C: Sends update success message
deactivate C
deactivate S

User -> C: Requests to delete an employee
activate C 
C --> User: Display form to confirm
User -> C: Confirm action
C -> S: Sends delete request for an employee
activate S
S -> Database: Deletes employee information
activate Database
Database --> S: Confirmation of successful deletion
deactivate Database
S --> C: Sends delete success message
deactivate C
deactivate S

@enduml
