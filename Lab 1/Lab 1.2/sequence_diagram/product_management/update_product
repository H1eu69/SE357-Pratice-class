@startuml
actor User
control "Control" as C
participant "Server" as S
database Database

activate User
User -> C: (1) Requests to update a product
activate C
C --> User: (2) Display form to update product
User -> C: (3) Input new data
C -> C: (4) isValidProductData(data)
alt true
    C -> S: (5) updateProduct(productId, data)
    activate S
    S -> Database: (6) updateProduct(productId, data)
    activate Database
    Database --> S: (7) sendUpdateSuccessMessage(message)
    deactivate Database
    S --> C: (8) sendUpdateSuccessMessage(message)
    deactivate S
    C --> User: (9) showUpdateSuccessMessage(message)
else false
    C --> User: (10) showUpdateFailureMessage(message)
    deactivate C
end
@enduml

@startuml
actor User
control "Control" as C
participant "Server" as S
database Database

activate User
User -> C: (1) Requests to update a product
activate C
C --> User: (2) Display form to update product
deactivate C
User -> C: (3) Input new data
activate C
C -> C: (4) isValid(productdata)
alt true
    C -> S: (5) updateProduct(productData)
    activate S
    S -> Database: (6) updateProduct(productData)
    activate Database
    Database --> S: (7) notifyUpdateSuccess()
    deactivate Database
    S --> C: (8) notifyUpdateSuccess()
    deactivate S
    C --> User: (9) displayMessage(MSG_3)
else false
    C --> User: (10) displayMessage(MSG_5)
    deactivate C
end
@enduml